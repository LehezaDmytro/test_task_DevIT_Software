// Напишите функцию combos, которая принимает положительное целое число num и возвращает массив массивов положительных целых чисел, где сумма каждого массива равна  num.  Массивы не должны повторяться.

// Створюємо функцію combos.
function combos(num) {
  // Перевірка чи є вхідні дані числами
  if (typeof num !== "number") {
    throw new TypeError("Вхідний аргумент повинен бути числом!");
  }

  const result = []; // Створюємо пустий масив для збереження всіх комбінацій

  // Функція для знаходження всіх комбінацій
  // currentCombo - поточна комбінація чисел
  // remainingSum - залишок суми, яку потрібно отримати
  // startNum - початкове число для ітерації
  function findCombos(currentCombo, remainingSum, startNum) {
    if (remainingSum === 0) {
      // Якщо залишилася сума дорівнює 0, це означає, що ми знайшли комбінацію
      result.push(currentCombo.slice()); // Додаємо поточну комбінацію до результату
      return;
    }

    for (let i = startNum; i <= remainingSum; i++) {
      currentCombo.push(i); // Додаємо поточне число до комбінації
      findCombos(currentCombo, remainingSum - i, i); // Рекурсивно викликаємо функцію для знаходження інших комбінацій
      currentCombo.pop(); // Після рекурсивного виклику видаляємо поточне число з комбінації для наступних ітерацій
    }
  }

  findCombos([], num, 1); // Викликаємо функцію findCombos з початковими параметрами: порожня комбінація, число num та стартове число 1
  return result; // Повертаємо результат, який містить всі комбінації
}
// Виводимо результат у консоль для перевірки.
console.log(combos(5));
